"""initial uuid

Revision ID: 3d7b1216259e
Revises: 
Create Date: 2024-04-18 11:07:54.929255

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3d7b1216259e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='User id column'),
    sa.Column('last_name', sa.String(), nullable=True, comment='Фамилия'),
    sa.Column('first_name', sa.String(), nullable=True, comment='Имя'),
    sa.Column('middle_name', sa.String(), nullable=True, comment='Отчество'),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('group', sa.String(), nullable=True),
    sa.Column('course', sa.Integer(), nullable=True, comment='Курс обучения'),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False, comment='уникальное Имя пользователя'),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_staff', sa.Boolean(), server_default=sa.text('false'), nullable=True, comment='является ли пользователь частью персонала (преподаватель)'),
    sa.Column('is_superuser', sa.Boolean(), server_default=sa.text('false'), nullable=True, comment='является ли пользователь суперпользователем'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата создания пользователя'),
    sa.Column('user_image', sa.String(), server_default='default_user_image.png', nullable=True, comment='Изображение пользователя'),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username'),
    comment='Таблица пользователей'
    )
    op.create_table('subjects',
    sa.Column('subject_id', sa.UUID(), nullable=False, comment='Идентификатор предмета'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='Идентификатор пользователя'),
    sa.Column('subject_name', sa.String(), nullable=False, comment='Название предмета'),
    sa.Column('short_description', sa.String(), nullable=False, comment='Краткое описание предмета'),
    sa.Column('description', sa.String(), nullable=False, comment='Полное описание предмета'),
    sa.Column('subject_image', sa.String(), server_default='subject_image.png', nullable=False, comment='Изображения для предмета'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('subject_id'),
    comment='Предметы, на которые подписаны пользователи. У каждого пользователя может быть несколько предметов'
    )
    op.create_table('task',
    sa.Column('task_id', sa.UUID(), nullable=False, comment='Идентификатор задания'),
    sa.Column('task_name', sa.String(), nullable=False, comment='Название задания'),
    sa.Column('completed', sa.Boolean(), server_default=sa.text('false'), nullable=True, comment='Статус задания'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='Пользователь которому принадлежит задание'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('task_id'),
    comment='Todo list. Задания пользователей которые они должны выполнить (цели). '
    )
    op.create_table('teacher_information',
    sa.Column('teacher_information_id', sa.UUID(), nullable=False, comment='идентификатор информации'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='id пользователя'),
    sa.Column('teacher_experience', sa.Integer(), nullable=True, comment='опыт преподавателя'),
    sa.Column('teacher_description', sa.String(), nullable=True, comment='Информация о преподавателе'),
    sa.Column('is_done', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('teacher_information_id'),
    comment='Дополнительная информация о преподавателе'
    )
    op.create_table('user_theme',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='Идентификатор пользователя'),
    sa.Column('theme', sa.String(), server_default='light', nullable=False, comment='Тема пользователя (светлая/темная)'),
    sa.Column('seed_color', sa.String(), server_default='green', nullable=False, comment='Цвет цветовой схемы приложения'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id'),
    comment='Цветовая схема пользователя (тема). Уникальная для каждого пользователя'
    )
    op.create_table('enrollments',
    sa.Column('enrollment_id', sa.UUID(), nullable=False, comment='Идентификатор записи о подписке'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='Пользователь, подписавшийся на предмет'),
    sa.Column('subject_id', sa.UUID(), nullable=False, comment='Предмет, на который подписался пользователь. Сам предмет'),
    sa.Column('enrollment_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата подписки'),
    sa.Column('completed', sa.Boolean(), server_default=sa.text('false'), nullable=True, comment='Статус завершения предмета'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.subject_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('enrollment_id'),
    comment='Записи о подписках пользователей на предметы'
    )
    op.create_table('subject_tasks',
    sa.Column('subject_task_id', sa.UUID(), nullable=False, comment='Идентификатор задания'),
    sa.Column('task_name', sa.String(), nullable=False, comment='Название задания'),
    sa.Column('completed', sa.Boolean(), server_default=sa.text('false'), nullable=True, comment='Статус задания'),
    sa.Column('subject_id', sa.UUID(), nullable=True, comment='Идентификатор предмета'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.subject_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('subject_task_id'),
    comment='Задания для предмета. У каждого предмета может быть несколько заданий'
    )
    op.create_table('subject_theory',
    sa.Column('theory_id', sa.UUID(), nullable=False, comment='Идентификатор теории'),
    sa.Column('theory_data', sa.String(), nullable=True, comment='Данные теории (файл, текст, ссылка)'),
    sa.ForeignKeyConstraint(['theory_id'], ['subjects.subject_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('theory_id'),
    comment='Теория для предмета. У каждого предмета может быть только одна теория в виде файла'
    )
    op.create_table('grades',
    sa.Column('grade_id', sa.UUID(), nullable=False, comment='Идентификатор оценки'),
    sa.Column('enrollment_id', sa.UUID(), nullable=False, comment='Идентификатор записи о подписке'),
    sa.Column('grade_value', sa.Integer(), nullable=False, comment='Сама оценка'),
    sa.Column('grade_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Дата выставления оценки'),
    sa.ForeignKeyConstraint(['enrollment_id'], ['enrollments.enrollment_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('grade_id'),
    comment='Итоговая оценка студентов по предметам'
    )
    op.create_table('task_grades',
    sa.Column('task_grade_id', sa.UUID(), nullable=False, comment='Идентификатор оценки за задание'),
    sa.Column('enrollment_id', sa.UUID(), nullable=True, comment='Идентификатор записи о подписке'),
    sa.Column('subject_task_id', sa.UUID(), nullable=False, comment='Идентификатор задания'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='Идентификатор пользователя, который выполнил задание'),
    sa.Column('grade_value', sa.Integer(), nullable=False, comment='Оценка за задание'),
    sa.Column('grade_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Дата постановки оценки'),
    sa.ForeignKeyConstraint(['enrollment_id'], ['enrollments.enrollment_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_task_id'], ['subject_tasks.subject_task_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('task_grade_id'),
    comment='Оценки за задания по предметам'
    )
    op.create_table('user_task_files',
    sa.Column('subject_task_id', sa.UUID(), nullable=False, comment='Идентификатор задания'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='пользователь'),
    sa.Column('enrollment_id', sa.UUID(), nullable=False, comment='предмет на который записан пользователй'),
    sa.Column('task_file', sa.String(), nullable=False, comment='файл прикрепленный к заданию'),
    sa.Column('completed', sa.Boolean(), server_default=sa.text('true'), nullable=False, comment='Отправил ли ученик задание'),
    sa.ForeignKeyConstraint(['enrollment_id'], ['enrollments.enrollment_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_task_id'], ['subject_tasks.subject_task_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('subject_task_id', 'user_id'),
    comment='Файлы для заданий пользователей. К каждому заданию может быть прикреплено несколько файлов'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_task_files')
    op.drop_table('task_grades')
    op.drop_table('grades')
    op.drop_table('subject_theory')
    op.drop_table('subject_tasks')
    op.drop_table('enrollments')
    op.drop_table('user_theme')
    op.drop_table('teacher_information')
    op.drop_table('task')
    op.drop_table('subjects')
    op.drop_table('users')
    # ### end Alembic commands ###
